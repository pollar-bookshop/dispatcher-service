plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
//	id 'org.springframework.boot' version '2.7.18'
//	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

ext {
//	set('springCloudVersion', "2023.0.3")
	set('springCloudVersion', "2022.0.4")
	set('otelVersion', "1.33.3")
}

group = 'com.polarbookshop'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.cloud:spring-cloud-function-context'
	// 액추에이터 엔드포인트 활성화를 위한 의존성 추가 시작
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	// 액추에이터 엔드포인트 활성화를 위한 의존성 추가 끝
	implementation 'org.springframework.cloud:spring-cloud-stream-binder-rabbit'

	// Only on Apple Silicon. Why it's necessary: https://github.com/netty/netty/issues/11020
	// runtimeOnly 'io.netty:netty-resolver-dns-native-macos:4.1.101.Final:osx-aarch_64'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	runtimeOnly "io.opentelemetry.javaagent:opentelemetry-javaagent:${otelVersion}"

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
